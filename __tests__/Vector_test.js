// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Vector$AppliedLinearAlgebra = require("../src/reason/Vector.js");

describe("vector_add", (function () {
        Jest.test("basic floats", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            5.9,
                            /* :: */[
                              11.2,
                              /* :: */[
                                13.6,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Vector$AppliedLinearAlgebra.vector_add(undefined, /* :: */[
                                    2.2,
                                    /* :: */[
                                      4.3,
                                      /* :: */[
                                        5.5,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    3.7,
                                    /* :: */[
                                      6.9,
                                      /* :: */[
                                        8.1,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("floats", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  7.089,
                                  /* :: */[
                                    -7.229999999999999,
                                    /* [] */0
                                  ]
                                ], Jest.Expect[/* expect */0](Vector$AppliedLinearAlgebra.vector_add(undefined, /* :: */[
                                          8.218,
                                          /* :: */[
                                            -9.341,
                                            /* [] */0
                                          ]
                                        ], /* :: */[
                                          -1.129,
                                          /* :: */[
                                            2.111,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

describe("vector_substract", (function () {
        Jest.test("basic floats", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            3.3,
                            /* :: */[
                              6.0,
                              /* :: */[
                                -5.7,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Vector$AppliedLinearAlgebra.vector_substract(undefined, /* :: */[
                                    -2.0,
                                    /* :: */[
                                      3.0,
                                      /* :: */[
                                        0.0,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    -5.3,
                                    /* :: */[
                                      -3.0,
                                      /* :: */[
                                        5.7,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("floats", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  15.342,
                                  /* :: */[
                                    7.337,
                                    /* [] */0
                                  ]
                                ], Jest.Expect[/* expect */0](Vector$AppliedLinearAlgebra.vector_substract(undefined, /* :: */[
                                          7.119,
                                          /* :: */[
                                            8.215,
                                            /* [] */0
                                          ]
                                        ], /* :: */[
                                          -8.223,
                                          /* :: */[
                                            0.878,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

describe("add_one", (function () {
        return Jest.test("basic", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  2,
                                  /* :: */[
                                    3,
                                    /* :: */[
                                      4,
                                      /* [] */0
                                    ]
                                  ]
                                ], Jest.Expect[/* expect */0](Vector$AppliedLinearAlgebra.add_one(/* :: */[
                                          1,
                                          /* :: */[
                                            2,
                                            /* :: */[
                                              3,
                                              /* [] */0
                                            ]
                                          ]
                                        ])));
                    }));
      }));

/*  Not a pure module */
