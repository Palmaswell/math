// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Root$AppliedLinearAlgebra = require("../src/Root.js");

describe("Square Root Bisection method", (function () {
        Jest.test("Root of 10", (function (param) {
                return Jest.Expect[/* toEqual */12](3.162277660168379, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                      return Root$AppliedLinearAlgebra.f(10.00, param);
                                    }), -2.00, 5.00)));
              }));
        Jest.test("Root of 9", (function (param) {
                return Jest.Expect[/* toEqual */12](3.00, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                      return Root$AppliedLinearAlgebra.f(9.00, param);
                                    }), -2.00, 6.00)));
              }));
        Jest.test("Root of 16", (function (param) {
                return Jest.Expect[/* toEqual */12](4.00, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                      return Root$AppliedLinearAlgebra.f(16.00, param);
                                    }), -2.00, 6.00)));
              }));
        Jest.test("Root of 11", (function (param) {
                return Jest.Expect[/* toEqual */12](3.3166247903554, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                      return Root$AppliedLinearAlgebra.f(11.00, param);
                                    }), -2.00, 5.00)));
              }));
        Jest.test("More root tests 1", (function (param) {
                var partial_arg = -4.587 * -4.587;
                return Jest.Expect[/* toEqual */12](4.586999999999999, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                      return Root$AppliedLinearAlgebra.f(partial_arg, param);
                                    }), 0.00, 4.587)));
              }));
        Jest.test("More root tests 2", (function (param) {
                var partial_arg = 0.685 * 0.685;
                return Jest.Expect[/* toEqual */12](0.6849999999999996, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                      return Root$AppliedLinearAlgebra.f(partial_arg, param);
                                    }), 0.00, 1.00)));
              }));
        return Jest.test("More root tests 3", (function (param) {
                      var partial_arg = 8.444 * 8.444;
                      return Jest.Expect[/* toEqual */12](8.444, Jest.Expect[/* expect */0](Root$AppliedLinearAlgebra.bisection(undefined, (function (param) {
                                            return Root$AppliedLinearAlgebra.f(partial_arg, param);
                                          }), 0.00, 71.30114)));
                    }));
      }));

/*  Not a pure module */
