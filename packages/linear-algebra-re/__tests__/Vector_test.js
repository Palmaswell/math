// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Vector$LinearAlgebraRe = require("../src/Vector.js");

describe("add", (function () {
        Jest.test("basic floats", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            5.9,
                            /* :: */[
                              11.2,
                              /* :: */[
                                13.6,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.add(undefined, /* :: */[
                                    2.2,
                                    /* :: */[
                                      4.3,
                                      /* :: */[
                                        5.5,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    3.7,
                                    /* :: */[
                                      6.9,
                                      /* :: */[
                                        8.1,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("floats", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  7.089,
                                  /* :: */[
                                    -7.229999999999999,
                                    /* [] */0
                                  ]
                                ], Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.add(undefined, /* :: */[
                                          8.218,
                                          /* :: */[
                                            -9.341,
                                            /* [] */0
                                          ]
                                        ], /* :: */[
                                          -1.129,
                                          /* :: */[
                                            2.111,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

describe("substract", (function () {
        Jest.test("basic floats", (function (param) {
                return Jest.Expect[/* toEqual */12](/* :: */[
                            3.3,
                            /* :: */[
                              6.0,
                              /* :: */[
                                -5.7,
                                /* [] */0
                              ]
                            ]
                          ], Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.substract(undefined, /* :: */[
                                    -2.0,
                                    /* :: */[
                                      3.0,
                                      /* :: */[
                                        0.0,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    -5.3,
                                    /* :: */[
                                      -3.0,
                                      /* :: */[
                                        5.7,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("floats", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  15.342,
                                  /* :: */[
                                    7.337,
                                    /* [] */0
                                  ]
                                ], Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.substract(undefined, /* :: */[
                                          7.119,
                                          /* :: */[
                                            8.215,
                                            /* [] */0
                                          ]
                                        ], /* :: */[
                                          -8.223,
                                          /* :: */[
                                            0.878,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

describe("scale", (function () {
        return Jest.test("floats", (function (param) {
                      return Jest.Expect[/* toEqual */12](/* :: */[
                                  12.38211,
                                  /* :: */[
                                    -7.49892,
                                    /* :: */[
                                      -2.35638,
                                      /* [] */0
                                    ]
                                  ]
                                ], Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.scalar(7.41, /* :: */[
                                          1.671,
                                          /* :: */[
                                            -1.012,
                                            /* :: */[
                                              -0.318,
                                              /* [] */0
                                            ]
                                          ]
                                        ])));
                    }));
      }));

describe("magnitude", (function () {
        Jest.test("test direction vector", (function (param) {
                return Jest.Expect[/* toEqual */12](5.975789236577877, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.magnitude(/* :: */[
                                    5.581,
                                    /* :: */[
                                      -2.136,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        Jest.test("2 entry vector", (function (param) {
                return Jest.Expect[/* toEqual */12](7.4402829247280655, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.magnitude(/* :: */[
                                    -0.221,
                                    /* :: */[
                                      7.437,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        Jest.test("3 entry vector", (function (param) {
                return Jest.Expect[/* toEqual */12](9.633842950764768, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.magnitude(/* :: */[
                                    -4.587,
                                    /* :: */[
                                      0.685,
                                      /* :: */[
                                        8.444,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("3 entry vector", (function (param) {
                      return Jest.Expect[/* toEqual */12](10.884187567292287, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.magnitude(/* :: */[
                                          8.813,
                                          /* :: */[
                                            -1.331,
                                            /* :: */[
                                              -6.247,
                                              /* [] */0
                                            ]
                                          ]
                                        ])));
                    }));
      }));

describe("Dot Product", (function () {
        Jest.test("two entries vector", (function (param) {
                return Jest.Expect[/* toEqual */12](-41.382286, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.dot_product(undefined, /* :: */[
                                    7.887,
                                    /* :: */[
                                      4.138,
                                      /* [] */0
                                    ]
                                  ], /* :: */[
                                    -8.802,
                                    /* :: */[
                                      6.776,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        return Jest.test("three entries vector", (function (param) {
                      return Jest.Expect[/* toEqual */12](56.39717800000001, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.dot_product(undefined, /* :: */[
                                          -5.955,
                                          /* :: */[
                                            -4.904,
                                            /* :: */[
                                              -1.874,
                                              /* [] */0
                                            ]
                                          ]
                                        ], /* :: */[
                                          -4.496,
                                          /* :: */[
                                            -8.755,
                                            /* :: */[
                                              7.103,
                                              /* [] */0
                                            ]
                                          ]
                                        ])));
                    }));
      }));

describe("Angle between two vectors", (function () {
        Jest.test("radian angle", (function (param) {
                return Jest.Expect[/* toEqual */12](3.0720263098372476, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.angle(/* Radians */0, /* :: */[
                                    3.183,
                                    /* :: */[
                                      -7.627,
                                      /* [] */0
                                    ]
                                  ], /* :: */[
                                    -2.668,
                                    /* :: */[
                                      5.319,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        return Jest.test("degree angle", (function (param) {
                      return Jest.Expect[/* toEqual */12](60.27581120523091, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.angle(/* Degrees */1, /* :: */[
                                          7.35,
                                          /* :: */[
                                            0.221,
                                            /* :: */[
                                              5.188,
                                              /* [] */0
                                            ]
                                          ]
                                        ], /* :: */[
                                          2.751,
                                          /* :: */[
                                            8.259,
                                            /* :: */[
                                              3.985,
                                              /* [] */0
                                            ]
                                          ]
                                        ])));
                    }));
      }));

describe("Check if two vectors are orthogonal to each other", (function () {
        Jest.test("[-7.579, -7.88], [22.737, 23.64]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_orthogonal(/* :: */[
                                    -7.579,
                                    /* :: */[
                                      -7.88,
                                      /* [] */0
                                    ]
                                  ], /* :: */[
                                    22.737,
                                    /* :: */[
                                      23.64,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        Jest.test("[-2.029, 9.97, 4.172], [-9.231, -6.639, -7.245]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_orthogonal(/* :: */[
                                    -2.029,
                                    /* :: */[
                                      9.97,
                                      /* :: */[
                                        4.172,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    -9.231,
                                    /* :: */[
                                      -6.639,
                                      /* :: */[
                                        -7.245,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("[-2.328, -7.284, -1.214], [-1.821, 1.072, -2.94]", (function (param) {
                return Jest.Expect[/* toEqual */12](true, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_orthogonal(/* :: */[
                                    -2.328,
                                    /* :: */[
                                      -7.284,
                                      /* :: */[
                                        -1.214,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    -1.821,
                                    /* :: */[
                                      1.072,
                                      /* :: */[
                                        -2.94,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("[2.118, 4.827], [0.00, 0.00]", (function (param) {
                      return Jest.Expect[/* toEqual */12](true, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_orthogonal(/* :: */[
                                          2.118,
                                          /* :: */[
                                            4.827,
                                            /* [] */0
                                          ]
                                        ], /* :: */[
                                          0.00,
                                          /* :: */[
                                            0.00,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

describe("Check if a vector is a zero vector", (function () {
        Jest.test("[-7.579, -7.88]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_zero(/* :: */[
                                    -7.579,
                                    /* :: */[
                                      -7.88,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        Jest.test("[-2.029, 9.97, 4.172]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_zero(/* :: */[
                                    -2.029,
                                    /* :: */[
                                      9.97,
                                      /* :: */[
                                        4.172,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("[-2.328, -7.284, -1.214]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_zero(/* :: */[
                                    -2.328,
                                    /* :: */[
                                      -7.284,
                                      /* :: */[
                                        -1.214,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("[-2.328, -7.284, -1.214]", (function (param) {
                      return Jest.Expect[/* toEqual */12](true, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_zero(/* :: */[
                                          0.00,
                                          /* :: */[
                                            0.00,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

describe("Check if two vectors are parallel to each other", (function () {
        Jest.test("[-7.579, -7.88], [22.737, 23.64]", (function (param) {
                return Jest.Expect[/* toEqual */12](true, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_parallel(/* :: */[
                                    -7.579,
                                    /* :: */[
                                      -7.88,
                                      /* [] */0
                                    ]
                                  ], /* :: */[
                                    22.737,
                                    /* :: */[
                                      23.64,
                                      /* [] */0
                                    ]
                                  ])));
              }));
        Jest.test("[-2.029, 9.97, 4.172], [-9.231, -6.639, -7.245]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_parallel(/* :: */[
                                    -2.029,
                                    /* :: */[
                                      9.97,
                                      /* :: */[
                                        4.172,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    -9.231,
                                    /* :: */[
                                      -6.639,
                                      /* :: */[
                                        -7.245,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        Jest.test("[-2.328, -7.284, -1.214], [-1.821, 1.072, -2.94]", (function (param) {
                return Jest.Expect[/* toEqual */12](false, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_parallel(/* :: */[
                                    -2.328,
                                    /* :: */[
                                      -7.284,
                                      /* :: */[
                                        -1.214,
                                        /* [] */0
                                      ]
                                    ]
                                  ], /* :: */[
                                    -1.821,
                                    /* :: */[
                                      1.072,
                                      /* :: */[
                                        -2.94,
                                        /* [] */0
                                      ]
                                    ]
                                  ])));
              }));
        return Jest.test("[2.118, 4.827], [0.00, 0.00]", (function (param) {
                      return Jest.Expect[/* toEqual */12](true, Jest.Expect[/* expect */0](Vector$LinearAlgebraRe.is_parallel(/* :: */[
                                          2.118,
                                          /* :: */[
                                            4.827,
                                            /* [] */0
                                          ]
                                        ], /* :: */[
                                          0.00,
                                          /* :: */[
                                            0.00,
                                            /* [] */0
                                          ]
                                        ])));
                    }));
      }));

/*  Not a pure module */
